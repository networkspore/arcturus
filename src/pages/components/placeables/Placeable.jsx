/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef,useImperativeHandle, forwardRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { Color } from 'three'

const Placeable = (props = {}, ref) => {
  const group = useRef()

  const color = "color" in props ? props.color  : new Color("white");
  const name = "name" in props ? props.name : "KoboldRanger";
  const src = "src" in props ? props.src : "objects/KuboldRanger.glb"
  
  useImperativeHandle(
    ref,
    () => (
      group.current

    ));

  const { nodes, materials } = useGLTF(src)
  return (
    <group ref={group}  {...props} dispose={null}>
      <mesh  castShadow={true} receiveShadow={true} geometry={nodes[name].geometry} >
        <meshStandardMaterial color={color} />
        </mesh>
        
    
    </group>
  )
}


export default forwardRef(Placeable);

